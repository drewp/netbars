#!/usr/bin/python

import cyclone.web
from twisted.internet import reactor
import json
import pkg_resources
from netbars.traffic import RecentActivity
import docopt
args = docopt.docopt('''
Usage: netbars [options]

--port=PORT     HTTP server port [default: 3001]
--iface=IF      Network interface to watch
--local=IPADDR  Address of our host on the network
''')


recent = RecentActivity(localSide=args['--local'], iface=args['--iface'])
    
class root(cyclone.web.RequestHandler):
    def get(self):
        self.set_header('Content-type', 'text/html')
        self.write(pkg_resources.resource_stream('netbars', "bars.html").read())

class recentPage(cyclone.web.RequestHandler):
    def get(self):
        """
        n hosts with the most traffic to+from our local host
        """
        n = int(self.get_argument('n', default='5'))
        self.set_header('Content-type', 'application/json')
        self.write(json.dumps(recent.recent(n=n)))

class traffic(cyclone.web.RequestHandler):
    def get(self):
        """
        gets the [bytes_in, bytes_out] per second, averaged over the
        last 5 seconds
        """
        self.set_header('Content-type', 'application/json')
        self.write(json.dumps(recent.traffic()))

app = cyclone.web.Application([
    (r"/", root),
    (r"/recent", recentPage),
    (r"/traffic", traffic),
    ])
reactor.listenTCP(int(args['--port']), app, interface='::')
reactor.run()




